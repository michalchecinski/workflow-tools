- name: Add Argo Helm Repo
  kubernetes.core.helm_repository:
    name: argo
    repo_url: "https://argoproj.github.io/argo-helm"

- name: Deploy ArgoCD
  kubernetes.core.helm:
    name: argo
    chart_ref: argo/argo-cd
    release_namespace: argocd
    create_namespace: true
    values:
      global:
        tag: "{{ version.argocd }}"
      server:
        ingress:
          enabled: true
          ingressClassName: "public"
          hosts: 
            - "{{ ingressHosts.argocd }}"
          tls:
            - secretName: argocd-server-tls
              hosts:
                - "{{ ingressHosts.argocd }}"
          annotations:
            nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
            nginx.ingress.kubernetes.io/ssl-passthrough: "true"
            nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
            cert-manager.io/cluster-issuer: "{{ ingressHosts.clusterIssuer }}"

- name: Check ArgoCD CLI Installation
  stat:
    path: ~/.local/bin/argocd
  register: clipath

- name: MacOS Install ArgoCD CLI
  when: clipath.stat.exists == False and ansible_os_family == "Darwin"
  shell: |
    VERSION=$(curl --silent "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
    curl -sSL -o ~/.local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-darwin-amd64
    chmod +x ~/.local/bin/argocd

- name: Linux Install ArgoCD CLI
  when: clipath.stat.exists == False and ansible_os_family != "Darwin"
  shell: |
    VERSION=$(curl --silent "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
    curl -sSL -o ~/.local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/$VERSION/argocd-linux-amd64
    chmod +x ~/.local/bin/argocd

- name: Bootstrap ArgoCD with CLI
  shell: |
    kubectl wait --namespace=argocd --all --for=condition=Ready pods --timeout=900s
    #kubectl port-forward svc/argo-argocd-server -n argocd 32001:443 &
    ARGOCD_PW=$(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo)
    #argocd login --username admin --password $ARGOCD_PW --insecure localhost:32001
    echo "Git repo: {{ argocd.git_repo }}"
    echo "Git private key path: {{ argocd.git_private_key }}"
    argocd login --username admin --password $ARGOCD_PW --insecure argocd.local
    if [ -z {{ argocd.git_repo }} ]
    then
      echo "No repository specified in values.yml to add to ArgoCD."
    else
      ssh-keyscan github.com | argocd cert add-ssh --batch
      argocd repo add {{ argocd.git_repo }} --ssh-private-key-path {{ argocd.git_private_key }}
    fi
    fg
    exit 0
