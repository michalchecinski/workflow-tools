#!/bin/bash

usage () {
  echo "
Usage: dotfiles [COMMAND] [ARGS] 
  This script is used to manage dotfiles found in https://github.com/joseph-flinn/workflow/tools/tree/main/dotfiles
  across all Linux like machines

Commands:
  install - Installs the latest released dotfiles for a specified OS from GitHub
    Args:
      os - choosing the collection of dotfiles by OS. Choices: ubuntu, mac
    Examples: 
      dotfiles install mac

  install-dev - Installs the local ~/workflow-tools versions of the dotfiles for developing and testing
    Args:
      os - choosing the collection of dotfiles by OS. Choices: ubuntu, mac
    Examples: 
      dotfiles install-dev ubuntu

  update-self - Updates the dotfiles script from the latest release on GitHub
    Examples: 
      dotfiles update-self

  help - Prints out the usage doc
    Examples: 
      dotfiles help
"
}

version () {
  local version=$(curl -sL https://api.github.com/repos/joseph-flinn/workflow-tools/releases/latest | jq -r ".tag_name")
  echo "Latest: $version"
  echo "Installed: $(cat $HOME/.config/dotfiles/.version)"
}

# Get the latest dotfiles
download_dotfiles () {
  local OS=$1
  local download_url=$(curl -s https://api.github.com/repos/joseph-flinn/workflow-tools/releases/latest | jq --arg os $OS -c -r '.assets[] | select( .name | test($os)) | select( .name | test("-dotfiles.")).browser_download_url')

  if [[ "$download_url" != "Not Found" ]]; then
    echo "Download url: $download_url"
    curl -s -L $download_url > /tmp/$OS-dotfiles.zip
    unzip -q /tmp/$OS-dotfiles.zip -d /tmp
    rm /tmp/$OS-dotfiles.zip
  else
    echo "[!] Download url not found"
    exit
  fi
}

install_dotfiles () {
  local OS=$1
  local config_dir="$HOME/.config"
  local dot_config_dir="$config_dir/dotfiles"

  if [[ -d $dot_config_dir ]]; then
    mv $dot_config_dir $dot_config_dir.old
  elif ! [[ -d $config_dir ]]; then
    mkdir -p $config_dir
  fi

  mv -f /tmp/$OS-dotfiles $config_dir/dotfiles

  install_dotfile_dir $dot_config_dir

  if [[ -d $dot_config_dir.old ]]; then
    rm -rf $dot_config_dir.old
  fi
}

install_dev_dotfiles () {
  local OS=$1
  local dotfiles_dir="$HOME/workflow-tools/dotfiles/current"
  local dot_config_dir="$dotfiles_dir/$OS"

  install_dotfile_dir $dot_config_dir

}

install_dotfile_dir () {
  local dot_config_dir=$1

  files=$(find $dot_config_dir -maxdepth 1 -mindepth 1 -exec basename {} \;)
  for file in $files; do
    if [ "$file" != ".version" ]; then
      echo "[+] installing dotfile: $dot_config_dir/$file"
      if [[ -f $dot_config_dir/$file ]] || [[ -d $dot_config_dir/$file ]]; then
        if [ -f ~/$file ] || [ -h ~/$file ]; then
          mv ~/$file ~/$file.old
          ln -s $dot_config_dir/$file ~/$file
          rm ~/$file.old
        else
          ln -s $dot_config_dir/$file ~/$file
        fi
      else
        echo "[!] dotfile doesn't exist: $dot_config_dir/$file"
      fi
    fi
  done
}

check_os () {
  case $1 in
    "ubuntu") OS=ubuntu;;
    "mac") OS=mac;;
    *)
      echo "[!] Unsupported os: $1"
      echo "[*] Supported environments: ubuntu, mac"
      exit 1
    ;;
  esac
}

update_self () {
  local download_url=$(curl -s https://api.github.com/repos/joseph-flinn/workflow-tools/releases/latest | jq -r '.assets[] | select( .name == "dotfiles").browser_download_url')

  if [[ "$download_url" != "Not Found" ]]; then
    echo "Download url: $download_url"
    curl -s -L $download_url > /usr/local/bin/dotfiles
    chmod +x /usr/local/bin/dotfiles
  else
    echo "[!] Download url not found"
    exit
  fi
}

# Get command
COMMAND=$1; shift

# Run command
case $COMMAND in 
  "install")
    OS=""
    check_os $1
    download_dotfiles $OS
    install_dotfiles $OS
  ;;
  "install-dev")
    OS=""
    check_os $1
    install_dev_dotfiles "shared"
    install_dev_dotfiles $OS
  ;;
  "update-self") update_self ;;
  "version") version ;;
  "help") usage ;;
  *)
    echo "[!] Unrecognized command: $COMMAND"
  ;;
esac

